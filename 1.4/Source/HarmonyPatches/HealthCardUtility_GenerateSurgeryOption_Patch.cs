using HarmonyLib;
using RimWorld;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using Verse;

namespace VREAndroids
{
    [HotSwappable]
    [HarmonyPatch(typeof(HealthCardUtility), "GenerateSurgeryOption")]
    public static class HealthCardUtility_GenerateSurgeryOption_Patch
    {
        public static Regex regexReplaceLabel = new Regex("(.*) (\\w+)");
        public static Pawn curPawn;
        public static void Prefix(Pawn pawn, out ThingDef __state, ref RecipeDef recipe, BodyPartRecord part = null)
        {
            curPawn = pawn;
            __state = part?.def.spawnThingOnRemoved;
            if (curPawn.IsAndroid())
            {
                if (part?.def != null)
                {
                    var counterPart = part.def.GetAndroidCounterPart();
                    if (counterPart != null)
                    {
                        part.def.spawnThingOnRemoved = counterPart.spawnThingOnRemoved;
                    }
                }
                recipe = recipe.RecipeForAndroid();
            }
        }
        public static IEnumerable<CodeInstruction> Transpiler(IEnumerable<CodeInstruction> codeInstructions)
        {
            return codeInstructions.MethodReplacer(AccessTools.PropertyGetter(typeof(BodyPartRecord), nameof(BodyPartRecord.Label)),
                AccessTools.Method(typeof(HealthCardUtility_GenerateSurgeryOption_Patch), nameof(GetAndroidCounterPart)));
        }

        public static string GetAndroidCounterPart(BodyPartRecord bodyPartRecord)
        {
            if (curPawn.IsAndroid())
            {
                var counterPart = bodyPartRecord.def.GetAndroidCounterPart();
                if (counterPart != null)
                {
                    return bodyPartRecord.AndroidPartLabel(counterPart);
                }
            }
            return bodyPartRecord.Label;
        }

        public static string AndroidPartLabel(this BodyPartRecord bodyPartRecord, HediffDef counterPart)
        {
            if (bodyPartRecord.customLabel.NullOrEmpty() is false)
            {
                if (DefGenerator_GenerateImpliedDefs_PreResolve_Patch.autogeneratedAndroidPartHediffs.Contains(counterPart))
                {
                    var oldLabel = bodyPartRecord.customLabel;
                    var newLabel = bodyPartRecord.customLabel.Replace(bodyPartRecord.def.label, counterPart.label);
                    if (newLabel != oldLabel)
                    {
                        return newLabel;
                    }
                    else
                    {
                        return regexReplaceLabel.Replace(newLabel, "$1 " + "VREA.Artifical".Translate().ToLower() + " $2");
                    }
                }
                else
                {
                    return bodyPartRecord.customLabel.Replace(bodyPartRecord.def.label, counterPart.label);
                }
            }
            else
            {
                return counterPart.label;
            }
        }

        public static void Postfix(ThingDef __state, BodyPartRecord part = null)
        {
            if (part != null)
            {
                part.def.spawnThingOnRemoved = __state;
            }
            curPawn = null;
        }
    }
}
